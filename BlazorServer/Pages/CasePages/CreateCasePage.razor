@page "/cases/create-case"
@inject NavigationManager Nav
@using BlazorServer.Data.Models.Domain
@using BlazorServer.Data.Repositories
@inherits OwningComponentBase
<h3>Create Case</h3>

<div class="row">
    <div class="col-lg-6">
        <EditForm Model="@CaseModel" OnValidSubmit="SubmitForm">
            <FluentValidationValidator />
            <ValidationSummary/>
            <div class="mb-3">
                <label for="@CaseModel.CaseReference">Case reference</label>
                <InputText @bind-Value="CaseModel.CaseReference" class="form-control"/>
                <ValidationMessage For="@(() => CaseModel.CaseReference)"/>
            </div>
            <div class="mb-3">
                <SfCheckBox @bind-Checked="CaseModel.IsActive" Label="Active case" CssClass="e-success"></SfCheckBox><br/>
                <ValidationMessage For="@(() => CaseModel.IsActive)"/>
            </div>
            <div class="mb-3">
                <input type="submit" value="Create" class="btn btn-primary"/>
                <a href="/cases/index" class="btn btn-secondary ml-2">Back to case list</a>
            </div>
        </EditForm>
    </div>
</div>

@code {
    
    private CaseRecord CaseModel { get; set; } = new();
    private bool Busy { get; set; }
    private CaseRepository? _caseRepository;

    protected override void OnInitialized()
    {
        _caseRepository = ScopedServices.GetRequiredService<CaseRepository>();
        CaseModel.DateCreated = DateTime.Now;
        CaseModel.CreatedBy = "System";
    }

    private async Task SubmitForm()
    {
        if (Busy) return;
        Busy = true;
        await _caseRepository.AddCase(CaseModel);
        Busy = false;
        CaseModel = new();
        Nav.NavigateTo("/cases/index");
    }
}