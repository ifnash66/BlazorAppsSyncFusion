@page "/hosts/view-host"
@using BlazorServer.Data.Models.Domain
@using BlazorServer.Data.Repositories
@inherits OwningComponentBase
@inject NavigationManager Nav
<h1>View Host</h1>
<hr/>
<div class="row">
    <div class="col-lg-6">
        <dl class="row">
            <dt class="col-lg-2">First name</dt>
            <dd class="col-lg-10">@HostRecord.FirstName</dd>
            <dt class="col-lg-2">Last name</dt>
            <dd class="col-lg-10">@HostRecord.LastName</dd>
            <dt class="col-lg-2">Date of Birth</dt>
            <dd class="col-lg-10">@HostRecord.DateOfBirth</dd>
        </dl>
    </div>
</div>

<div class="row">
    <div class="col-lg-8">
        <AddressHistory HostRecordId="@_hostId" Busy="@_busy" />
    </div>
</div>

<div class="row my-2">
    <div class="col-lg-6">
        <a href="/hosts/index" class="btn btn-secondary ml-2">Back to host list</a>
    </div>
</div>

@code {

    private HostRecord HostRecord { get; set; } = new();
    private bool _busy = false;
    private HostRepository? _hostRepository;
    private int _hostId;

    protected override async Task OnInitializedAsync()
    {
        _hostRepository = ScopedServices.GetRequiredService<HostRepository>();
        GetQueryStringValues();
        if (_busy) return;
        _busy = true;
        var hostRecord = await _hostRepository.GetHost(_hostId);
        if (hostRecord is not null)
        {
            HostRecord = hostRecord;
        }
        _busy = false;
        await base.OnInitializedAsync();
    }
    
    void GetQueryStringValues()
    {
        Nav.TryGetQueryString("id", out _hostId);
    }
}