@using BlazorServer.Data.Models.Domain
@using BlazorServer.Data.Repositories
@using Action = Syncfusion.Blazor.Grids.Action
@inherits OwningComponentBase
@inject NavigationManager Nav

<h2>Address History </h2>

<SfGrid DataSource="@AddressRecords" AllowPaging="true" AllowSorting="true" AllowFiltering="true" GridLines="GridLine.Both" Toolbar="@(new List<string>() { "Add", "Edit" })">
    <GridPageSettings PageSize="5"></GridPageSettings>
        <GridEvents OnActionBegin="OnActionBegin" TValue="AddressRecord"></GridEvents>
        <GridEditSettings AllowAdding="true" AllowEditing="true" AllowEditOnDblClick="true" AllowDeleting="true"></GridEditSettings>
    <GridColumns>
        <GridColumn Field=@nameof(AddressRecord.AddressText) HeaderText="Address" Width="400"></GridColumn>
        <GridColumn Field=@nameof(AddressRecord.IsCurrentAddress) HeaderText="Current Address" TextAlign="TextAlign.Right" Width="150"></GridColumn>
        <GridColumn Field=@nameof(AddressRecord.MoveInDate) HeaderText="Move In Date" Format="dd/MM/yyyy" Type="ColumnType.Date" TextAlign="TextAlign.Right"></GridColumn>
        <GridColumn Field=@nameof(AddressRecord.MoveOutDate) HeaderText="Move Out Date" Format="dd/MM/yyyy" Type="ColumnType.Date" TextAlign="TextAlign.Right"></GridColumn>
        <GridColumn Field=@nameof(AddressRecord.DateCreated) HeaderText="Date Created" Format="dd/MM/yyyy HH:mm" Type="ColumnType.Date" TextAlign="TextAlign.Right"></GridColumn>
        <GridColumn Field=@nameof(AddressRecord.CreatedBy) HeaderText="Created By" TextAlign="TextAlign.Right"></GridColumn>
    </GridColumns>
</SfGrid>

@code {
    
    [Parameter]
    public int HostRecordId { get; set; }
    
    [Parameter]
    public bool Busy { get; set; }

    private HostRepository? _hostRepository;

    private List<AddressRecord> AddressRecords { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        _hostRepository = ScopedServices.GetRequiredService<HostRepository>();
        if (Busy) return;
        Busy = true;
        var addressRecords = await _hostRepository.GetAddressHistory(HostRecordId);
        if (addressRecords is not null)
        {
            AddressRecords = addressRecords.ToList();
        }
        Busy = false;
        await base.OnInitializedAsync();
    }
    
    private void OnActionBegin(ActionEventArgs<AddressRecord> args)
    {
        if (args.RequestType == Action.Add)
        {
            Nav.NavigateTo($"/hosts/addresses/create-address?hostRecordId={HostRecordId}");
        }
        if (args.RequestType == Action.BeginEdit)
        {
            Nav.NavigateTo($"/hosts/addresses/edit-address?addressRecordId={args.Data.Id}");
        } 
    }
}