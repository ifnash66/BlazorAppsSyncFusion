@using BlazorServer.Data.Models.Domain
@using BlazorServer.Data.Repositories
@inherits OwningComponentBase
@inject NavigationManager NavigationManager

<p>
    <a href="/home-visits/create-visit">Create home visit</a>
</p>

<SfGrid DataSource="@HomeVisitRecords" AllowPaging="true" AllowSorting="true" AllowFiltering="true">
    <GridPageSettings PageSize="5"></GridPageSettings>
    <GridColumns>
        <GridColumn Field=@nameof(HomeVisitRecord.Id) HeaderText="Visit Id" TextAlign="TextAlign.Right"></GridColumn>
        <GridColumn Field=@nameof(HomeVisitRecord.VisitorName) HeaderText="Visitor Name"></GridColumn>
        <GridColumn Field=@nameof(HomeVisitRecord.HostsVisited) HeaderText="Hosts Visited" TextAlign="TextAlign.Right"></GridColumn>
        <GridColumn Field=@nameof(HomeVisitRecord.GuestsVisited) HeaderText="Guests Visited" TextAlign="TextAlign.Right"></GridColumn>
        <GridColumn Field=@nameof(HomeVisitRecord.VisitDate) HeaderText="Visit Date/Time" Format="dd/MM/yyyy hh:mm" Type="ColumnType.Date" TextAlign="TextAlign.Right"></GridColumn>
        <GridColumn Field=@nameof(HomeVisitRecord.DateCreated) HeaderText="Date Created" Format="dd/MM/yyyy" Type="ColumnType.Date" TextAlign="TextAlign.Right"></GridColumn>
        <GridColumn Field=@nameof(HomeVisitRecord.CreatedBy) HeaderText="Created By" TextAlign="TextAlign.Right"></GridColumn>
        <GridColumn HeaderText="Action" TextAlign="TextAlign.Center">
            <Template>
                @{
                    var visit = (context as HomeVisitRecord);
                    <div>
                        <button class="btn btn-primary" @onclick="@(() => EditVisit(visit.Id))">Edit</button>
                        <button class="btn btn-danger ml-2" @onclick="@(() => DeleteVisit(visit))">Delete</button>
                    </div>
                }
            </Template>
        </GridColumn>
    </GridColumns>
</SfGrid>

@code {

    private List<HomeVisitRecord> HomeVisitRecords { get; set; } = new();
    private HomeVisitRepository? _homeVisitRepository;

    protected override void OnInitialized()
    {
        _homeVisitRepository = ScopedServices.GetRequiredService<HomeVisitRepository>();

        var visits = _homeVisitRepository.GetHomeVisits();
        if (visits is not null)
        {
            HomeVisitRecords = visits;
        }
    }

    private void EditVisit(int id)
    {
        NavigationManager.NavigateTo($@"/home-visits/edit-visit/{id}");
    }

    private void DeleteVisit(HomeVisitRecord visit)
    {
        _homeVisitRepository.RemoveHomeVisit(visit);
        var visits = _homeVisitRepository.GetHomeVisits();
        if (visits is not null)
        {
            HomeVisitRecords = visits;
            StateHasChanged();
        }
    }
}